never p2 {    /* !([] ((! ((controller@ismoving))) || (opendoor))) */
T0_init:
	do
	:: atomic { (! (((! ((controller@ismoving))) || (opendoor)))) -> assert(!(! (((! ((controller@ismoving))) || (opendoor))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never p3 {    /* !(((! (<> ([] ((state[0]==1))))) || (<> ([] ((state[1]==1))))) || (<> ([] ((state[2]==1))))) */
T0_init:
	do
	:: (! (((state[1]==1))) && ! (((state[2]==1))) && ((state[0]==1))) -> goto accept_S637
	:: (! (((state[1]==1))) && ((state[0]==1))) -> goto T2_S637
	:: (((state[0]==1))) -> goto T0_S637
	:: (1) -> goto T0_init
	od;
accept_S637:
	do
	:: (((state[0]==1))) -> goto T0_S637
	od;
T2_S637:
	do
	:: (! (((state[2]==1))) && ((state[0]==1))) -> goto accept_S637
	:: (((state[0]==1))) -> goto T2_S637
	od;
T0_S637:
	do
	:: (! (((state[1]==1))) && ! (((state[2]==1))) && ((state[0]==1))) -> goto accept_S637
	:: (! (((state[1]==1))) && ((state[0]==1))) -> goto T2_S637
	:: (((state[0]==1))) -> goto T0_S637
	od;
}
never p4 {    /* !(! ([] (<> (opendoor)))) */
T0_init:
	do
	:: ((opendoor)) -> goto accept_S9
	:: (1) -> goto T0_init
	od;
accept_S9:
	do
	:: (1) -> goto T0_init
	od;
}
never p41 {    /* !([] (<> (! ((controller@doorclosed))))) */
T0_init:
	do
	:: (! ((! ((controller@doorclosed))))) -> goto accept_S4
	:: (1) -> goto T0_init
	od;
accept_S4:
	do
	:: (! ((! ((controller@doorclosed))))) -> goto accept_S4
	od;
}
never p5 {    /* !([] (<> (! (opendoor)))) */
T0_init:
	do
	:: (! ((! (opendoor)))) -> goto accept_S4
	:: (1) -> goto T0_init
	od;
accept_S4:
	do
	:: (! ((! (opendoor)))) -> goto accept_S4
	od;
}
never p51 {    /* !([] (<> (! ((controller@dooropened))))) */
T0_init:
	do
	:: (! ((! ((controller@dooropened))))) -> goto accept_S4
	:: (1) -> goto T0_init
	od;
accept_S4:
	do
	:: (! ((! ((controller@dooropened))))) -> goto accept_S4
	od;
}
