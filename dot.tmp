digraph p_floor1 {
size="8,10";
  GT [shape=box,style=dotted,label="floor1"];
  GT -> S1;
	S1 -> S10  [color=black,style=bold,label="state[0] = 0"];
	S10 -> S5  [color=black,style=bold,label="((state[0]==0))"];
	S10 -> S7  [color=black,style=bold,label="((state[0]==1))"];
	S5 -> S4  [color=black,style=dashed,label="c!1"];
	S4 -> S10  [color=black,style=bold,label="state[0] = 1"];
	S7 -> S10  [color=black,style=solid,label="(1)"];
}
digraph p_floor2 {
size="8,10";
  GT [shape=box,style=dotted,label="floor2"];
  GT -> S1;
	S1 -> S10  [color=black,style=bold,label="state[1] = 0"];
	S10 -> S5  [color=black,style=bold,label="((state[1]==0))"];
	S10 -> S7  [color=black,style=bold,label="((state[1]==1))"];
	S5 -> S4  [color=black,style=dashed,label="c!2"];
	S4 -> S10  [color=black,style=bold,label="state[1] = 1"];
	S7 -> S10  [color=black,style=solid,label="(1)"];
}
digraph p_floor3 {
size="8,10";
  GT [shape=box,style=dotted,label="floor3"];
  GT -> S1;
	S1 -> S10  [color=black,style=bold,label="state[2] = 0"];
	S10 -> S5  [color=black,style=bold,label="((state[2]==0))"];
	S10 -> S7  [color=black,style=bold,label="((state[2]==1))"];
	S5 -> S4  [color=black,style=dashed,label="c!3"];
	S4 -> S10  [color=black,style=bold,label="state[2] = 1"];
	S7 -> S10  [color=black,style=solid,label="(1)"];
}
digraph p_controller {
size="8,10";
  GT [shape=box,style=dotted,label="controller"];
  GT -> S19;
	S19 -> S16  [color=black,style=bold,label="c?piano"];
	S16 -> S3  [color=black,style=dashed,label="((piano==elevator))"];
	S16 -> S9  [color=black,style=dashed,label="((piano<elevator))"];
	S16 -> S12  [color=black,style=dashed,label="((piano>elevator))"];
	S3 -> S4  [color=black,style=dashed,label="opendoor = 1"];
	S4 -> S5  [color=black,style=dashed,label="opendoor = 0"];
	S5 -> S6  [color=black,style=dashed,label="state[(piano-1)] = 0"];
	S6 -> S19  [color=black,style=bold,label="goto :b4"];
	S9 -> S16  [color=black,style=bold,label="elevator = (elevator-1)"];
	S12 -> S16  [color=black,style=bold,label="elevator = (elevator+1)"];
}
digraph claim_p1 {
size="8,10";
  GT [shape=box,style=dotted,label="p1"];
  GT -> S6;
	S6 -> S2  [color=black,style=dashed,label="(!((!(opendoor)||!((controller._p==ismoving)))))"];
	S6 -> S6  [color=black,style=bold,label="(1)"];
	S2 -> S6  [color=black,style=bold,label="assert(!(!((!(opendoor)||!((controller._p==ismoving))))))"];
}
digraph claim_p2 {
size="8,10";
  GT [shape=box,style=dotted,label="p2"];
  GT -> S6;
	S6 -> S2  [color=black,style=dashed,label="(!((!((controller._p==ismoving))||opendoor)))"];
	S6 -> S6  [color=black,style=bold,label="(1)"];
	S2 -> S6  [color=black,style=bold,label="assert(!(!((!((controller._p==ismoving))||opendoor))))"];
}
digraph claim_p3 {
size="8,10";
  GT [shape=box,style=dotted,label="p3"];
  GT -> S4;
	S4 -> S2  [color=black,style=dashed,label="(!((((333==1)||(333==1))||(333==1))))"];
  S4 [color=red,style=bold];
	S2 -> S4  [color=black,style=solid,label="assert(!(!((((333==1)||(333==1))||(333==1)))))"];
}
digraph claim_p4 {
size="8,10";
  GT [shape=box,style=dotted,label="p4"];
  GT -> S5;
	S5 -> S10  [color=black,style=bold,label="(opendoor)"];
	S5 -> S5  [color=black,style=bold,label="(1)"];
	S10 -> S5  [color=black,style=solid,label="(1)"];
  S10 [color=red,style=bold];
}
digraph claim_p41 {
size="8,10";
  GT [shape=box,style=dotted,label="p41"];
  GT -> S5;
	S5 -> S10  [color=black,style=bold,label="(!(!((controller._p==doorclosed))))"];
	S5 -> S5  [color=black,style=bold,label="(1)"];
	S10 -> S10  [color=black,style=bold,label="(!(!((controller._p==doorclosed))))"];
  S10 [color=red,style=bold];
}
digraph claim_p5 {
size="8,10";
  GT [shape=box,style=dotted,label="p5"];
  GT -> S5;
	S5 -> S10  [color=black,style=bold,label="(!(!(opendoor)))"];
	S5 -> S5  [color=black,style=bold,label="(1)"];
	S10 -> S10  [color=black,style=bold,label="(!(!(opendoor)))"];
  S10 [color=red,style=bold];
}
digraph claim_p51 {
size="8,10";
  GT [shape=box,style=dotted,label="p51"];
  GT -> S5;
	S5 -> S10  [color=black,style=bold,label="(!(!((controller._p==dooropened))))"];
	S5 -> S5  [color=black,style=bold,label="(1)"];
	S10 -> S10  [color=black,style=bold,label="(!(!((controller._p==dooropened))))"];
  S10 [color=red,style=bold];
}
